//Comandos criando repositorio pelo Github
#git clone https://github.com/AndreFCNLessa/EstudosSTB.git
copiar arquivos na pasta
#cd EstudosSTB
#git status
#git add *
#git commit -m "Oque foi feito"
#git push
#git log

//criando repositorio por linha de comando
git init 															// cria repositorio dentro do diretorio que esta
git init novaPasta													// cria a pasta com repositorio dentro dele
git add nomeDoArquivo												// adiciona aruivo com nome especificado ou se colocar, * add td . add td no diretorio atual do repositorio
git commit 															// para fazer o commit como se estivese editando um arquivo pelo vi
git config --glogal user.name AndreLessa							// configura Nome
git config --glogal user.email andrefcnlessa@yahoo.com.br			// configura email
git status															// saber status
git log																// ver os commites
git remote add origin https://github.com/AndreFCNLessa/GIT.git		// add ao remote 
git branch -M main													// não utilizou porem esta no tutorial do Github
git push -u origin master											// fazendo push

//git push para ser feito o repositorio local precisa estar sincronizado com o repositrorio na nuvem.

git diff HEAD~1 													// mostra a diferença entre os 2 ultimos commites
git diff numeroDoCommit1 numeroDoCommit2							// mostra diferenças entre 2 commits

git remote -v 														// para ver os repositorios remotes configurados

git pull															// para puchar as modificações do repositorio remoto feito por outra pessoa

git checkout numeroDoCommitPodeSerVistoComGitLog					// Comando para voltar a uma versão anterior
git checkout master													// Para voltar ao repositorio atual
git checkout --	nome do arquivo										// Para descartar as mudanças realizadas, volta ao estado do ultimo commit
git checkout HEAD -- arquivo										// volta para o commite anterior apos ja ter feito um add

git revert numeroDoCommitPodeSerVistoComGitLog						// Comando usado para cancelar o commit feito

git reset HEAD~1													// apaga do repositorio 1 commit 2 apaga dois...., porem a mudanças realizadas continuam nos arquivos
git reset HEAD~1 --hard												// apaga do repositorio 1 commit 2 apaga dois...., e volta para o estado do commit anterior alterando os arquivos

